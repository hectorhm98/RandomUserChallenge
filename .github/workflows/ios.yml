name: iOS Workflow

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build-and-test:
    name: Build & Test on iOS Simulator
    runs-on: macos-14

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Select Xcode 15.4
        run: sudo xcode-select -s /Applications/Xcode_15.4.app

      - name: Detect Default Scheme
        run: |
          scheme_list=$(xcodebuild -list -json | tr -d "\n")
          default=$(echo $scheme_list | ruby -e "require 'json'; puts JSON.parse(STDIN.gets)['project']['targets'][0]")
          echo "$default" > default_scheme.txt
          echo "Default scheme: $default"

      - name: Build
        run: |
          scheme=$(cat default_scheme.txt)
          platform="iOS Simulator"
          device=$(xcrun xctrace list devices 2>&1 | grep -oE 'iPhone.*?[^\(]+' | head -1 | awk '{$1=$1;print}' | sed -e "s/ Simulator$//")
          if ls *.xcworkspace 1> /dev/null 2>&1; then
            filetype_parameter="-workspace"
            file_to_build=$(ls *.xcworkspace | head -1)
          else
            filetype_parameter="-project"
            file_to_build=$(ls *.xcodeproj | head -1)
          fi
          echo "Building with $file_to_build on $device"
          xcodebuild build-for-testing $filetype_parameter "$file_to_build" -scheme "$scheme" -destination "platform=$platform,name=$device"

      - name: Run Tests
        run: |
          scheme=$(cat default_scheme.txt)
          platform="iOS Simulator"
          device=$(xcrun xctrace list devices 2>&1 | grep -oE 'iPhone.*?[^\(]+' | head -1 | awk '{$1=$1;print}' | sed -e "s/ Simulator$//")
          if ls *.xcworkspace 1> /dev/null 2>&1; then
            filetype_parameter="-workspace"
            file_to_build=$(ls *.xcworkspace | head -1)
          else
            filetype_parameter="-project"
            file_to_build=$(ls *.xcodeproj | head -1)
          fi
          echo "Testing on $device"
          xcodebuild test-without-building $filetype_parameter "$file_to_build" -scheme "$scheme" -destination "platform=$platform,name=$device"
